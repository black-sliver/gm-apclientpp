name: Build MSBuild

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-msbuild:
    # TODO: automated testing
    runs-on: windows-latest
    strategy:
      matrix:
        sln:
          - vs2015
        platform:
          - win32
          - win64
      fail-fast: false


    steps:
      - name: Set env win32
        if: |
          matrix.platform == 'win32'
        shell: bash
        run: |
          echo "ARCH=win32" >> $GITHUB_ENV
          echo "BUILD_PLATFORM=x86" >> $GITHUB_ENV
          echo "BUILD_CONFIGURATION=Release" >> $GITHUB_ENV
          echo "OPENSSL_BUILD_PLATFORM=VC-WIN32" >> $GITHUB_ENV

      - name: Set env win64
        if: |
          matrix.platform == 'win64'
        shell: bash
        run: |
          echo "ARCH=win64" >> $GITHUB_ENV
          echo "BUILD_PLATFORM=x64" >> $GITHUB_ENV
          echo "BUILD_CONFIGURATION=Release" >> $GITHUB_ENV
          echo "OPENSSL_BUILD_PLATFORM=VC-WIN64A" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install build tools v140
        if: |
          matrix.sln == 'vs2015'
        run: |
          Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_buildtools.exe" -OutFile "vs_BuildTools.exe"
          Start-Process -FilePath ./vs_BuildTools.exe -ArgumentList "--add", "Microsoft.VisualStudio.Component.VC.140", "--quiet", "--norestart", "--force", "--wait" -Wait -PassThru


      - uses: ilammy/setup-nasm@v1

      - name: Add MSBuild to PATH
        uses: ilammy/msvc-dev-cmd@v1
        if: |
          matrix.sln == 'vs2015'
        with:
          arch: ${{env.ARCH}}
          toolset: '14.0'

      - uses: shogo82148/actions-setup-perl@v1

      - name: Build OpenSSL
        run: |
          md dep
          cd dep
          git clone -b OpenSSL_1_1_1-stable --depth 1 https://github.com/openssl/openssl.git
          cd openssl
          md ${{env.BUILD_PLATFORM}}
          cd ${{env.BUILD_PLATFORM}}
          perl ..\Configure ${{env.OPENSSL_BUILD_PLATFORM}} no-shared
          nmake /S

      - name: Build Project
        run: |
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{matrix.sln}} /p:Platform=${{env.BUILD_PLATFORM}}

      - name: Move Output
        if: |
          matrix.platform == 'win64'
        run: |
          # no idea why OutputPath isn't working
          md ${{matrix.sln}}\${{env.BUILD_CONFIGURATION}}
          cp ${{matrix.sln}}\x64\${{env.BUILD_CONFIGURATION}}\*.dll ${{matrix.sln}}\${{env.BUILD_CONFIGURATION}}
          dir ${{matrix.sln}}\${{env.BUILD_CONFIGURATION}}

      - name: Store
        uses: actions/upload-artifact@v4
        with:
          name: gm-apclientpp-${{matrix.sln}}-${{matrix.platform}}
          path: ${{matrix.sln}}\${{env.BUILD_CONFIGURATION}}\gm-apclientpp.dll

      - name: Set env
        if: ${{ github.ref_type == 'tag' }}
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Package
        if: ${{ github.ref_type == 'tag' }}
        run: Compress-Archive -Path ${{matrix.sln}}\${{env.BUILD_CONFIGURATION}}\gm-apclientpp.dll -DestinationPath gm-apclientpp-${{matrix.platform}}.zip

      - name: Release
        if: ${{ github.ref_type == 'tag' }}
        uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
        with:
          draft: true
          name: gm-apclientpp ${{ env.RELEASE_TAG }}
          files: gm-apclientpp-${{matrix.platform}}.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
